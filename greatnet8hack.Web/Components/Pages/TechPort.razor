@page "/"
@rendermode InteractiveServer
@attribute [StreamRendering(true)]


@inject TechPortApiClient TechPortApi

<PageTitle>NASA TechPort Headlines - Hack Together: The Great .NET 8 Hack</PageTitle>

<div class="mx-auto max-w-5xl bg-white pl-0 pr-0 text-center">
    <div class="block bg-gradient-to-br from-blue-400 to-indigo-800 bg-clip-text p-8 text-6xl font-bold text-transparent">
        <div class="block text-8xl font-light">NASA</div>
        <div class="font-extrabold">TechPort Headlines</div>
        <div class="font-mono text-2xl font-extralight tracking-tight">Hack Together: The Great .NET 8 Hack</div>
    </div>
    <form @onsubmit='() => search(searchQuery)'>
        <div class="relative flex h-12 ml-8 mr-8 items-center overflow-hidden rounded-lg bg-white shadow-lg">
            <div class="grid h-full w-12 place-items-center text-gray-400">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
            </div>

            <InputText @bind-Value=searchQuery 
                class="peer h-full w-full pr-2 text-lg font-semibold text-gray-800 outline-none" 
                id="search"
                placeholder="Search NASA technology projects..." />
        
        </div>
    </form>

    <div class="relative overflow-auto bg-clip-text">
        <div class="p-4 text-blue-800">
            <input type="checkbox" id="wlcheckbox" checked @onchange="toggleWritingLevel" title="Toggle for familiar NASA headlines or tabloid-style scoops" />
            <label for="wlcheckbox">
                By default, headlines are generated in a newsworthy style. Uncheck for a tabloid style.
            </label>
        </div>
    </div>

    <div class="p-4 text-blue-800">
        <span>Or try </span>
        <button @onclick='() => search("artificial intelligence")' class="pl-2 underline underline-offset-4">artificial intelligence</button>
        <button @onclick='() => search("deep space")' class="pl-2 underline underline-offset-4">deep space</button>
        <button @onclick='() => search("Mars")' class="pl-2 underline underline-offset-4">Mars</button>
    </div>
</div>

<div class="results @prismaticLoadingClass @prismaticLoadingClassTabloid mx-auto max-w-5xl relative">

    @if (prismaticLoadingClass != string.Empty || @prismaticLoadingClassTabloid != string.Empty)
    {
        <div class="absolute z-20 w-full h-full bg-transparent">&nbsp;</div>
        <div class="absolute bottom-0 left-0 right-0 top-0 z-30 m-auto overflow-auto rounded-xl p-8">
            <div class="flex items-center justify-center">
                <button type="button" class="inline-flex cursor-not-allowed items-center rounded-md bg-indigo-900 px-6 py-4 text-lg font-semibold leading-6 text-white shadow transition duration-300 ease-in-out hover:bg-indigo-950" disabled="">
                    <svg class="-ml-1 mr-3 h-5 w-5 animate-spin text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    @verbs[new Random().Next(0, verbs.Length)]...
                </button>
            </div>
        </div>
    }

    <div style="@fadedOutInlineStyle" class="inline-block font-sans text-4xl font-bold text-white drop-shadow-lg transition-all md:bg-gradient-to-b md:p-4">

        <a href="https://techport.nasa.gov/view/@project.projectId" target="_blank">
            <img src="@imageUrl" class="min-w-full md:float-left md:min-w-fit md:p-4 md:pt-3 md:drop-shadow-lg" alt="DALL-E generated image" />
        </a>

        <div class="inline-block w-auto @statusColor p-1 pl-2 pr-2 font-mono text-sm font-normal uppercase">
            @project.statusDescription
        </div>

        <div class="pl-4 pr-4 pt-4 md:-mt-0 md:pl-0 md:pt-0">
            <a href="https://techport.nasa.gov/view/@project.projectId" target="_blank" class="-mt-32 hover:underline focus:underline active:underline">
                @gptResponse.Headline
            </a>
        </div>

        <div class="pl-4 pr-4 pt-4 font-sans text-base font-normal md:pl-0">
            @gptResponse.Subhead

            @if (response != null)
            {
                <a href="https://techport.nasa.gov/view/@project.projectId" target="_blank" class="font-bold">
                    FULL STORY &raquo;
                </a>
            }
        </div>

        <div class="m-3 mt-4 grid grid-cols-1 gap-1 bg-transparent pt-4 text-sm font-semibold text-white md:ml-0 md:mr-0 md:grid-cols-5 md:pt-0">
            @foreach (var keyword in gptResponse.Keywords)
            {
                <div class="border-t-2 border-solid border-sky-500 p-2 transition-all hover:md:cursor-pointer hover:md:border-white hover:md:bg-black">
                    <button @onclick='() => search(keyword)' class="keyword">@keyword</button>
                </div>
            }
        </div>
    </div>
    <div style="@fadedOutInlineStyle" class="disclaimer clear-left p-4 text-sm font-normal text-white">
        @if (project.title != string.Empty)
        {
            <p>
                Originally published as
                <a href="https://techport.nasa.gov/view/@project.projectId" target="_blank" class="underline underline-offset-4">
                    <strong>@project.title - NASA TechPort</strong>
                </a>
            </p>
        }
        else
        {
            <p>
                Visit
                <a href="https://techport.nasa.gov/about" target="_blank" class="underline underline-offset-4">
                    <strong>NASA TechPort</strong>
                </a> to learn more about NASA technology projects.
            </p>
        }

        <p class="pt-4">
            The content on this page was generated by <code>gpt-35-turbo</code> and has not been reviewed for correctness.
        </p>
    </div>
</div>


@code {

    private string[] verbs = ["Perambulating","Struggling", "Grappling", "Battling", "Wrestling", "Contending", "Meandering", "Coping", "Suffering", "Enduring", "Surviving", "Processing", "Analyzing", "Computing", "Calculating", "Evaluating", "Synthesizing", "Sorting", "Organizing", "Debugging", "Decoding", "Processing", "Analyzing", "Computing", "Calculating", "Evaluating", "Synthesizing", "Sorting", "Organizing", "Debugging", "Decoding"];
    private const string DEFAULT_IMAGE_URL = "250x250.svg";
    private string imageUrl = DEFAULT_IMAGE_URL;
    private const string DEFAULT_FADED_OUT_INLINE_STYLE = "opacity: 10%;";
    private string fadedOutInlineStyle = DEFAULT_FADED_OUT_INLINE_STYLE;
    private const string DEFAULT_PRISMATIC_LOADING_CLASS = "prismatic";
    private string prismaticLoadingClass = DEFAULT_PRISMATIC_LOADING_CLASS;
    private const string DEFAULT_PRISMATIC_LOADING_CLASS_TABLOID = "tabloid";
    private string prismaticLoadingClassTabloid = string.Empty;
    private string statusColor = "bg-green-600";


    private WritingLevel writingLevel = WritingLevel.Academic;

    private const string initialSearchQuery = "LASOIS";
    private string searchQuery = string.Empty;

    private GptProjectResponse? response;
    private GptResponse gptResponse = new GptResponse
        {
            Headline = "LASOIS System Successfully Reduces Spatial Disorientation Risks for Lunar Astronauts in Groundbreaking Project",
            Subhead = "Key Findings and Developments of the Lunar Astronaut Spatial Orientation and Information System (LASOIS) Project",
            Keywords = ["Astronauts", "Lunar", "Disorientation", "LASOIS", "EVA (Extra Vehicular Activity)"]
        };

    private Project project = new Project
    {
        statusDescription = "Active",
        title = "Enhancement of Spatial Orientation Capability of Astronauts on the Lunar Surface"
    };

    private async Task toggleWritingLevel()
    {
        writingLevel = writingLevel == WritingLevel.Academic 
            ? WritingLevel.Scandalous 
            : WritingLevel.Academic;

        await search(searchQuery == string.Empty ? initialSearchQuery : searchQuery);
    }

    private async Task search(string text)
    {
        searchQuery = text;
        response = null; // show the loading indicator
        fadedOutInlineStyle = DEFAULT_FADED_OUT_INLINE_STYLE;
        prismaticLoadingClass = DEFAULT_PRISMATIC_LOADING_CLASS;
        prismaticLoadingClassTabloid = writingLevel == WritingLevel.Scandalous
            ? DEFAULT_PRISMATIC_LOADING_CLASS_TABLOID
            : string.Empty;

        response = await TechPortApi.GetSearchResponseAsync(text, writingLevel);

        if (response != null && response.GptResponse.Headline == string.Empty)
        {
            response = null;
        }

        SetDefaults(response, text);
    }

    protected override async Task OnInitializedAsync()
    {
        response = await TechPortApi.GetSearchResponseAsync(initialSearchQuery, writingLevel);

        SetDefaults(response, initialSearchQuery);

        await base.OnInitializedAsync();
    }

    private void SetDefaults(GptProjectResponse response, string search)
    {
        fadedOutInlineStyle = (response == null) ? DEFAULT_FADED_OUT_INLINE_STYLE : string.Empty;
        prismaticLoadingClass = (response == null) ? DEFAULT_PRISMATIC_LOADING_CLASS : string.Empty;
        prismaticLoadingClassTabloid = (response == null) ? DEFAULT_PRISMATIC_LOADING_CLASS_TABLOID : string.Empty;
        if (response == null)
        {
            imageUrl = "m87.jpg";
            gptResponse = new GptResponse
            {
                Headline = "No projects found.",
                Subhead = $"Your search for {search} did not yield any results at NASA TechPort, but you can try the following keywords:",
                Keywords = ["Astronauts", "Lunar", "Jupiter", "Solar", "Asteroid Bennu"]
            };
            project = new Project
            {
                statusDescription = "Canceled",
                title = string.Empty
            };

            prismaticLoadingClass = string.Empty;
            prismaticLoadingClassTabloid = string.Empty;
            fadedOutInlineStyle = string.Empty;

            return;
        }

        imageUrl = response.GptResponse.ImageUrl;
        gptResponse = response.GptResponse;
        project = response.Project;

        switch (project.statusDescription)
        {
            case "Active":
                statusColor = "bg-green-600";
                break;
            case "Completed":
                statusColor = "bg-cyan-700";
                break;
            case "Canceled":
                statusColor = "bg-red-700";
                break;
            default:
                statusColor = "bg-green-600";
                break;
        }
    }
}

<div class="text-center pt-4 w-full text-sm text-white">Made with 🤍 by Andy Merhaut</div>